#!/usr/bin/make -f
# -*- makefile -*-

ifneq ($(filter pkg.node-rollup-plugin-typescript.transpilebabel,$(DEB_BUILD_PROFILES)),)
TRANSPILE_PROF?=babel7
BABEL_PRESET?=env
export BABEL_PRESET
else ifneq ($(filter pkg.node-rollup-plugin-typescript.transpilebuble,$(DEB_BUILD_PROFILES)),)
TRANSPILE_PROF?=buble
else ifneq ($(filter pkg.node-rollup-plugin-typescript.transpilenone,$(DEB_BUILD_PROFILES)),)
TRANSPILE_PROF?=none
else
TRANSPILE_PROF?=none
endif
TRANSPILE?=$(TRANSPILE_PROF)
export TRANSPILE


%:
	dh $@

override_dh_auto_build:
	dh_auto_build --buildsystem=nodejs
	# Step 1: build a temporary @rollup/plugin-typescript
	cd packages/typescript && \
		ln -s ../../../node_modules/@types/resolve node_modules/ && \
		mkdir dist && \
		NODE_PATH=node_modules tsc --module CommonJS --esModuleInterop src/index.ts
	cd packages/typescript/src && \
		tar cf - `find . -name '*.js' -type f` |(cd ../dist; tar xf -) && \
		find . -name '*.js' -type f -delete
	mkdir -p packages/typescript/node_modules/@rollup
	mv packages/typescript/dist packages/typescript/node_modules/@rollup/plugin-typescript
	cp packages/typescript/package.json packages/typescript/node_modules/@rollup/plugin-typescript/
	# Step 2: upstream build
	cd packages/typescript && rollup -c
	rm -rf packages/typescript/node_modules/@rollup/plugin-typescript/
